on: [push, pull_request]

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        settings:
          - platform: macos-latest
            target: universal-apple-darwin
            toolchain: aarch64-apple-darwin,x86_64-apple-darwin
            bundles: app,dmg
            os: mac
          - platform: windows-latest
            target: x86_64-pc-windows-msvc
            toolchain: x86_64-pc-windows-msvc
            bundles: msi,nsis
            os: windows
          - platform: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            toolchain: x86_64-unknown-linux-gnu
            bundles: deb,appimage
            os: linux
            
    runs-on: ${{ matrix.settings.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.settings.platform == 'ubuntu-latest'
        # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
        with:
          target: "${{ matrix.settings.toolchain }}"

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm' # Set this to npm, yarn or pnpm.

      - name: Install frontend dependencies
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: npm install

      - name: Build the app
        id: build_os
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          args: --target ${{ matrix.settings.target }} --bundles ${{ matrix.settings.bundles }}

      - name: Upload unstable ${{ matrix.setting.os }}
        uses: actions/upload-artifact@v4
        with:
          name: "prose-nightly-${{ matrix.settings.os }}"
          path: "${{ join(fromJSON(steps.build_os.outputs.artifactPaths), '\n') }}"
