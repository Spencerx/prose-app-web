on:
  push:
    tags:
      - "*.*.*"

name: Bundle and Publish

jobs:
  bundle:
    environment: bundle-build

    strategy:
      fail-fast: false
      matrix:
        settings:
          - platform: macos-latest
            target: aarch64-apple-darwin
            toolchain: aarch64-apple-darwin
            bundles: app,dmg
            os: mac

    runs-on: ${{ matrix.settings.platform }}

    outputs:
      tag: ${{ steps.current_tag.outputs.tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: https://registry.npmjs.org

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          target: "${{ matrix.settings.toolchain }}"

      - name: Verify versions
        run: node --version && npm --version && node -p process.versions.v8 && rustc --version

      - name: Cache build context (NodeJS)
        id: cache-node
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node

      - name: Cache build context (Rust)
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"
          shared-key: ${{ runner.os }}-${{ matrix.settings.toolchain }}-rust

      - name: Get current tag
        id: current_tag
        uses: WyriHaximus/github-action-get-previous-tag@v1
        with:
          fallback: 0.0.0

      - name: Install dependencies
        run: npm install --no-audit

      - name: Run bundle build
        uses: tauri-apps/tauri-action@v0
        env:
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ vars.APPLE_SIGNING_IDENTITY }}
          APPLE_ID: ${{ vars.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_TEAM_ID: ${{ vars.APPLE_TEAM_ID }}
        with:
          tauriScript: npm run bundle
          args: --target ${{ matrix.settings.target }} --bundles ${{ matrix.settings.bundles }}

      - name: Archive output files
        run: tar -zcvf ./bundle-${{ steps.current_tag.outputs.tag }}-${{ matrix.settings.os }}.tar.gz -C src-tauri/target/${{ matrix.settings.target }}/release/bundle/ .

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.current_tag.outputs.tag }} Bundle (${{ runner.os }})
          path: ./bundle-${{ steps.current_tag.outputs.tag }}-${{ matrix.settings.os }}.tar.gz
          retention-days: 7

  publish:
    needs: bundle
    environment: bundle-publish
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.bundle.outputs.tag }} Bundle (${{ runner.os }})

      - name: Extract build artifacts
        run: tar -xzvf ./bundle-${{ needs.bundle.outputs.tag }}-${{ matrix.settings.os }}.tar.gz

      - name: Publish application (macOS)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_ACCESS_KEY }}
          AWS_EC2_METADATA_DISABLED: true
        run: |
          aws s3 cp --endpoint-url ${{ vars.S3_ENDPOINT }} dmg/ s3://${{ vars.S3_BUCKET }}/versions/${{ needs.bundle.outputs.tag }}/macos/ --recursive --exclude "*" --include "*.dmg"
